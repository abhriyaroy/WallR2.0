apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "../versions.gradle"
apply plugin: 'com.google.firebase.crashlytics'

def keystorePropertiesFile = project.file("signing.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
  lintOptions{
    abortOnError false
  }
  signingConfigs {
    release {
      keyAlias keystoreProperties['keyAlias']
      keyPassword keystoreProperties['keyPassword']
      storeFile file(keystoreProperties['storeFile'])
      storePassword keystoreProperties['storePassword']
    }
  }
  compileSdkVersion COMPILE_SDK_VERSION
  defaultConfig {
    applicationId "zebrostudio.wallr100"
    multiDexEnabled true
    minSdkVersion MINIMUM_SDK_VERSION
    targetSdkVersion TARGET_SDK_VERSION
    renderscriptTargetApi RENDER_SCRIPT_VERSION
    renderscriptSupportModeEnabled true
    versionCode APP_VERSION
    versionName APP_VERSION_NAME

    manifestPlaceholders = [onesignal_app_id               : "ff94f0fe-e700-4b66-9f26-5408fca95297",
                            onesignal_google_project_number: "REMOTE"]

    signingConfig signingConfigs.release

    testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
  }
  buildTypes {
    release {
      debuggable false
      minifyEnabled true
      proguardFiles 'proguard-rules.pro'
    }
    debug {
      minifyEnabled false
      proguardFiles 'proguard-rules.pro'
    }
  }
  testOptions {
    unitTests.returnDefaultValues = true
  }
  dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$KOTLIN_VERSION"
    // Android support libraries
    implementation "com.android.support:appcompat-v7:$APP_COMPAT_VERSION"
    implementation "com.google.android.material:material:$MATERIAL_DESIGN_VERSION"
    implementation "androidx.percentlayout:percentlayout:$PERCENT_LAYOUT_VERSION"
    implementation "androidx.constraintlayout:constraintlayout:$CONSTRAINT_LAYOUT_VERSION"
    // Dagger
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
    // Multidex
    implementation "com.android.support:multidex:$MULTIDEX_VERSION"
    // Rx java
    implementation "io.reactivex.rxjava2:rxjava:$RX_JAVA_VERSION"
    // Rx android
    implementation "io.reactivex.rxjava2:rxandroid:$RX_ANDROID_VERSION"
    // Autodispose
    implementation "com.uber.autodispose:autodispose-ktx:$AUTODISPOSE_VERSION"
    implementation "com.uber.autodispose:autodispose-android-ktx:$AUTODISPOSE_VERSION"
    implementation "com.uber.autodispose:autodispose-android-archcomponents-ktx:$AUTODISPOSE_VERSION"
    implementation "com.uber.autodispose:autodispose-android-archcomponents-test-ktx:$AUTODISPOSE_VERSION"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
    implementation "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"
    // Toasty
    implementation "com.github.GrenderG:Toasty:$TOASTY_VERSION"
    // Spinkit
    implementation "com.github.ybq:Android-SpinKit:$SPINKIT_VERSION"
    // Swipe Refresh
    implementation "com.github.recruit-lifestyle:WaveSwipeRefreshLayout:$WAVE_SWIPE_REFRESH_VERSION"
    // Smart tab
    implementation "com.ogaclejapan.smarttablayout:library:$SMART_TAB_VERSION"
    implementation "com.ogaclejapan.smarttablayout:utils-v4:$SMART_TAB_VERSION"
    // Glide
    implementation "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    kapt "com.github.bumptech.glide:compiler:$GLIDE_VERSION"
    // Material Dialog
    implementation "com.afollestad.material-dialogs:core:$MATERIAL_DIALOG_VERSION"
    // Recyclerview Animator
    implementation "jp.wasabeef:recyclerview-animators:$RECYCLER_VIEW_ANIMATOR_VERSION"
    // Firebase
    implementation "com.google.firebase:firebase-database:$FIREBASE_DATABASE_VERSION"
    implementation "com.google.firebase:firebase-dynamic-links:$FIREBASE_DYNAMIC_LINKS_VERSION"
    implementation "com.google.firebase:firebase-crashlytics:$FIREBASE_CRASHLYTICS_VERSION"
    implementation "com.google.firebase:firebase-analytics:$FIREBASE_ANALYTICS_VERSION"
    // Sliding up panel
    implementation "com.sothree.slidinguppanel:library:$SLIDING_UP_PANEL_VERSION"
    // Circle ImageView
    implementation "de.hdodenhof:circleimageview:$CIRCLE_IMAGEVIEW_VERSION"
    // BlurView
    implementation "com.eightbitlab:blurview:$BLURVIEW_VERSION"
    // Room
    implementation "android.arch.persistence.room:runtime:$ROOM_VERSION"
    implementation "android.arch.persistence.room:rxjava2:$ROOM_VERSION"
    kapt "android.arch.persistence.room:compiler:$ROOM_VERSION"
    // Taptarget view
    implementation "com.getkeepsafe.taptargetview:taptargetview:$TAP_TARGER_VIEW_VERSION"
    // Rx Image Picker
    implementation "com.github.qingmei2:rximagepicker:$RX_IMAGE_PICKER_VERSION"
    implementation "com.github.qingmei2:rximagepicker_support:$RX_IMAGE_PICKER_VERSION"
    implementation "com.github.qingmei2:rximagepicker_support_zhihu:$RX_IMAGE_PICKER_VERSION"
    // Onesignal
    implementation "com.onesignal:OneSignal:$ONE_SIGNAL_VERSION"
    // Module dependencies
    implementation project(':libraryGuillotineMenu')
    implementation project(':librarySearch')
    implementation project(':libraryWallrCustoms')
    implementation project(':libraryPurchaseFlow')
    implementation project(':libraryExpandIcon')
    implementation project(':libraryUCrop')
    implementation project(':libraryPhotoView')
    implementation project(':libraryDragSelectRecyclerView')
    implementation project(':libraryMaterialSpinner')
    implementation project(':libraryMaterialCab')
    implementation project(':libraryFloatingActionButton')
    implementation project(':libraryColorPickerView')
    implementation project(':libraryLowpolyRx')
    // Test runners
    testImplementation "junit:junit:$JUNIT_VERSION"
    testImplementation "org.assertj:assertj-core:$ASSERTJ_VERSION"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$MOCKITO_VERSION"
    // Instrumentation test runners
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$ESPRESSO_VERSION"
    androidTestImplementation "com.android.support.test:rules:$TEST_RULES_VERSION"
    androidTestImplementation "com.android.support.test:runner:$TEST_RUNNER_VERSION"
  }
}
apply plugin: 'com.google.gms.google-services'
